1.Dividing helpfulness rating of user in 2 parts:-
	 a. Helpful: h[0]
	 b. Not-Helpful : h[1] - h[0]
adding these two columns in the dataframe, dropping helpful column.

2.Classifying rating as good_rate and bad_rate (threshold = 3).
3.Calculate number of good and bad rating and add rating_class accordingly.
4.calculate helpfulness_ratio = helpful/(helpful+not_helpful) add column in dataframe.
5.fill nan helpfullness_ration with nan.
6.check duplicate enteries on the basis of asin , reviewname, unixReviewTime
7.Drop asin, reviewname and unixReviewTimecolumn
8.Convert time into form yyyy-mm-dd
9. describe() for rating, helful_review, not_helpfull_review, help_proportion
10.Plot diffrent graph to see relation
      a.Number of reviews over the year
      b.Number of reviews by month
      c.Distributuin of overall rating
      d.Average overall rating over the year
      e.Distribution of helpfullness
      f.Distribution of length of reviews on amazon
      g.Distribution of number of reviews written by each user
11.Text Preprocessing(raw reviews to cleaned reviews)-on review and summary
      a.remove special charachters.
      b.tokenize text
      c.removing stopwords
      d.correct spelling mistakes
      e.Lemmatization
12.Save Cleaned data
13.Create BOW(TfidfVectorizer)-word embedding to convert text into numeric charachters.
14.review text --------------> feature vectors
15. fit feature vector into supervised learning algorithm